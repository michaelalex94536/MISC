/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Auto-generated by STM32CubeIDE
 * @brief          : Main program body
 ******************************************************************************
 *
 *  Blink the user LED on GPIO Port C, pin 13 on the Black Pill board w/o using HAL libraries.
 *
 *  Need to use the schematic to see where the LED is and how its connected, and then use the
 *  reference manual to get the register addresses.
 *
 *  The LED anode is pulled up to 3.3 volts, so to turn the LED on, we need to set pin 13 low.
 *
 *
 *  Procedure:
 *  1) Enable the clock for GPIO Port C, which is on bus AHB1
 *  2) Set Pin 13 mode on GPIO port C to be an output
 *  3) Toggle the output data register (ODR) for the pin between high and low
 *
 *	At startup, the system clock is 16 MHz.
 *
 ******************************************************************************
 */

#include <stdint.h>
#include "stm32f4xx.h"

#define GPIOC_EN		(1 << 2)		// RCC enable bit for Port C on AHB1
#define GPIOC_MODE		(01 << 26)		// Mode bits of Pin 13 to make it an output

void make_delay(uint32_t delay_count);


int main(void)
{
	RCC->AHB1ENR |= GPIOC_EN;			// Enable port C clock on the AHB1 bus
	GPIOC->MODER |= GPIOC_MODE;			// Make Pin 13 of port C an output
	GPIOC->ODR |= (1 << 13);			// Set Pin 13 high to keep LED off

    /* Loop forever */
	while(1)
	{
		GPIOC->ODR &= ~(1 << 13);		// Turn the LED on by setting Pin 13 low
		make_delay(10000);

		GPIOC->ODR |= (1 << 13);		// Turn the LED off by setting Pin 13 high
		make_delay(10000);
	}
}

void make_delay(uint32_t delay_count)
{
	uint32_t i;
	for(i = 0; i << delay_count; i++){}

}
