/**
 *	At startup, the system clock is 16 MHz.  We want to enable the HSE (running at 25 MHz) and
 *	configure the system clock to maximum, or 100 MHz. The HSE is on pins PH0 and PH1.
 *
 *	From STM32Cube, the PLL settings need to be:
 *	/ M = / 12
 *	* N = X 96
 *	/ P = / 2
 *
 *	and ...
 *
 *	AHB prescaler: 		/ 1
 *	APB1 prescaler: 	/ 2
 *	APB2 prescaler:		/ 1
 *
 *
 *
 * Procedure:
 * 1a) Configure the power interface clock, bit 28 (PWREN) of APB1
 * 1b) Set voltage to Scale 1 for 100 MHz capability by setting both bits 15:14 (VOS) to 1 in the power control register, PWR_CR.
 *
 * 2a)  Enable the HSE (Set bit 16 (HSEON) of RCC_CR)
 * 2b) Make sure HSE is ready (Bit 17 (HSERDY) of RCC_CR is set)
 *
 * 3) Set the flash as in CubeMX using the Flash access control register (FLASH_ACR) by enabling
 * 	  Instruction cache, Data cache and Prefetch buffer. Set latency to 3.
 *
 * 4) Configure AHB, APB1, and APB2 prescalers
 *
 * 5) Configure PLL: M_DIV_12
 ******************************************************************************
 */


#include "stm32f4xx.h"

void ConfigSysClock(void);


int main(void)
{
	ConfigSysClock();

    /* Loop forever */
	while(1)
	{

	}
}


void ConfigSysClock(void)
{
	RCC->APB1ENR |= (0x1UL << (28U));					// Enable power interface clock
	PWR->CR |= ((0x1UL << (15U))|(1UL << (14U)));		// Set bits 15 and 14 high (Scale 1 mode)

	RCC->CR |= (0x1UL << (16U));				// Enable HSEON bit (16)
	while(!(RCC->CR & (0x1UL << (17U))));		// Wait until HSERDY bit (17) goes high

	// Configure flash as HAL would have done it:
	FLASH->ACR |= (FLASH_ACR_DCEN | FLASH_ACR_ICEN | FLASH_ACR_PRFTEN |FLASH_ACR_LATENCY_3WS);

	// Configure prescaler settings
	RCC->CFGR |= RCC_CFGR_HPRE_DIV1;		// AHB
	RCC->CFGR |= RCC_CFGR_PPRE1_DIV2;		// APB1
	RCC->CFGR |= RCC_CFGR_PPRE2_DIV1;		// APB2
}
